Given an array, generate all the possible subarrays of the given array using recursion.

Examples: 
      Input : [1, 2, 3]
      Output : [1], [1, 2], [2], [1, 2, 3], [2, 3], [3]
      
      Input : [1, 2]
      Output : [1], [1, 2], [2]

Approach: 
    1.Iterative
    2.Recursive

1.Iterative Approach:
      
      We mainly use three nested loops
      
      Outermost Loop : Picks starting index of current subarray
      Middle Loop : Picks ending point of current subarray
      Innermost Loop : Prints the subarray from the starting point to the ending point

      Time : O(n^3)
      Space : O(1)
      Code :
        class solution {
          public static void printsubarrays(int[] arr) {
            int n = arr.length;
            for(int i = 0;i < n; i++) {
              for(int j = i; j < n; j++) {
                for(int k = i; k <= j; k++) {
                  System.out.print(arr[k]+" ");
                }
                System.out.println();
              }
            }
          }
          public static void main(String args[]) {
              int[] arr = { 1, 2, 3 };
              printSubArrays(arr, 0, 0);
          }
        }

2. Recursive Approach:
      We use two pointers start and end to maintain the starting and ending point of the array and follow the steps given below: 
      
      Stop if we have reached the end of the array
      Increment the end index if start has become greater than end
      Print the subarray from index start to end and increment the starting index

      Time : O(nlogn)
      Space : O(1)
      Code :
        class solution {
            // Recursive function to print all possible subarrays
            // for given array
            static void printSubArrays(int[] arr, int start, int end)
            { 
                // Stop if we have reached the end of the array
                if (end == arr.length)
                    return;
                // Increment the end point and start from 0
                else if (start > end)
                    printSubArrays(arr, 0, end + 1);
                // Print the subarray and increment the starting
                // point
                else {
                    System.out.print("[");
                    for (int i = start; i < end; i++)
                        System.out.print(arr[i] +",");
                    System.out.println(arr[end]+"]");
                    printSubArrays(arr, start + 1, end);
                }
                return;
            }
            public static void main(String args[])
            {
                int[] arr = { 1, 2, 3 };
                printSubArrays(arr, 0, 0);
            }
        }
